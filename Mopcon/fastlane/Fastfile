# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  desc "Generate new localized screenshots"
  lane :screenshots do
    capture_screenshots(workspace: "Mopcon.xcworkspace", scheme: "Mopcon")
    #upload_to_app_store(skip_binary_upload: true, skip_metadata: true)
  end

  lane :test do
    scan
  end

  lane :changeLog do
    versionName = ios_get_version
    changeLog = read_changelog(
      changelog_path: './CHANGELOG.md',
      section_identifier: "[#{versionName}]",
      excluded_markdown_elements: ['###']
    )
    sh(
      "echo \"#{changeLog}\" > ./metadata/zh-Hant/release_notes.txt"
    )
    sh(
      "echo \"#{changeLog}\" > ./metadata/en-US/release_notes.txt"
    )
  end

  lane :changeUnreleaseLog do
    changeLog = read_changelog(
      changelog_path: './CHANGELOG.md',
      section_identifier: "[Unreleased]",
      excluded_markdown_elements: ['###']
    )
    sh(
      "echo \"#{changeLog}\" > ./metadata/zh-Hant/release_notes.txt"
    )
    sh(
      "echo \"#{changeLog}\" > ./metadata/en-US/release_notes.txt"
    )
  end

  lane :beta do
    xcversion(version: "10")
    get_certificates           # invokes cert
    get_provisioning_profile   # invokes sigh

    # new_build_number = next_version
    # set_build_number(
    #   new_build_number
    # )
    ios_set_build_number(build_number: next_build) # Time.now.to_i.to_s[0..7]

    build_app(
      scheme: "Mopcon",
      workspace: "Mopcon.xcworkspace",
      include_bitcode: true
    )
    upload_to_testflight
  end

  # lane :preRelease do
  private_lane :preRelease do
    ensure_git_status_clean

    oldVersion = ios_get_version
    versionNameArray = oldVersion.split('.')
    newVersionName = ""
    newVersionName = newVersionName + versionNameArray[0] + "."
    newVersionName = newVersionName + versionNameArray[1] + "."
    newVersionName = newVersionName + (versionNameArray[2].to_i+1).to_s
    newVersionName = "2.3"
    #echo(message: newVersionName)

    sh("git", "flow", "release", "start", newVersionName)

    ios_set_build_number(build_number: next_build) # Time.now.to_i.to_s[0..7]
    ios_set_version(version: newVersionName)
    # screenshots

    git_add(path: "./Mopcon.xcodeproj/project.pbxproj")
    git_add(path: "./Mopcon/Info.plist")
    git_add(path: "./MopconUITests/Info.plist")

    git_commit(
      path:[
        "./Mopcon.xcodeproj/project.pbxproj",
        "./Mopcon/Info.plist",
        "./MopconUITests/Info.plist"        
      ], 
      message: "change version")

  end

  lane :release do
    xcversion(version: "10")
    get_certificates           # invokes cert
    get_provisioning_profile   # invokes sigh

    preRelease

    build_app(
      scheme: "Mopcon",
      workspace: "Mopcon.xcworkspace",
      include_bitcode: true
    )
    upload_to_app_store
  end

  def next_build
    Time.now.strftime("%Y%m%d%H%M")
  end

end
